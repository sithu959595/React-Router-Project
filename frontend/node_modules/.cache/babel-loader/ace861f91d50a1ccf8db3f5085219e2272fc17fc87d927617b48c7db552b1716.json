{"ast":null,"code":"var _jsxFileName = \"/Users/lin/Desktop/React/Projects/Router 1/frontend/src/pages/EventDetailPage.js\";\nimport { useParams, json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { func } from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const params = useParams();\n  const data = useRouteLoaderData(\"event-detail\");\n  console.log(\"From detail \", data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Event Detail Page for \", params.eventId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport async function loader({\n  request,\n  params\n}) {\n  console.log(\"hi\");\n  const id = params.eventId;\n  console.log(\"id is \", id);\n  const resp = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!resp.ok) {\n    throw json({\n      message: \"Could not fetch the details for the selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    console.log(\"ok\");\n    return resp;\n  }\n}\nexport async function action() {\n  console.log(\"deaitl action is working\");\n}","map":{"version":3,"names":["useParams","json","useRouteLoaderData","EventItem","func","jsxDEV","_jsxDEV","Fragment","_Fragment","params","data","console","log","children","eventId","fileName","_jsxFileName","lineNumber","columnNumber","event","loader","request","id","resp","fetch","ok","message","status","action"],"sources":["/Users/lin/Desktop/React/Projects/Router 1/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { useParams, json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { func } from \"prop-types\";\nexport default function () {\n  const params = useParams();\n  const data = useRouteLoaderData(\"event-detail\");\n  console.log(\"From detail \", data);\n  return (\n    <>\n      <h1>Event Detail Page for {params.eventId}</h1>\n      <EventItem event={data.event} />\n    </>\n  );\n}\nexport async function loader({ request, params }) {\n  console.log(\"hi\");\n  const id = params.eventId;\n  console.log(\"id is \", id);\n  const resp = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!resp.ok) {\n    throw json(\n      {\n        message: \"Could not fetch the details for the selected event\",\n      },\n      { status: 500 }\n    );\n  } else {\n    console.log(\"ok\");\n    return resp;\n  }\n}\n\nexport async function action() {\n  console.log(\"deaitl action is working\");\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AACtE,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAClC,eAAe,YAAY;EACzB,MAAMC,MAAM,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,IAAI,GAAGR,kBAAkB,CAAC,cAAc,CAAC;EAC/CS,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAAC;EACjC,oBACEJ,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAAO,QAAA,GAAI,wBAAsB,EAACJ,MAAM,CAACK,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/CZ,OAAA,CAACH,SAAS;MAACgB,KAAK,EAAET,IAAI,CAACS;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAChC,CAAC;AAEP;AACA,OAAO,eAAeE,MAAMA,CAAC;EAAEC,OAAO;EAAEZ;AAAO,CAAC,EAAE;EAChDE,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACjB,MAAMU,EAAE,GAAGb,MAAM,CAACK,OAAO;EACzBH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEU,EAAE,CAAC;EACzB,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAC9D,IAAI,CAACC,IAAI,CAACE,EAAE,EAAE;IACZ,MAAMxB,IAAI,CACR;MACEyB,OAAO,EAAE;IACX,CAAC,EACD;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACLhB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,OAAOW,IAAI;EACb;AACF;AAEA,OAAO,eAAeK,MAAMA,CAAA,EAAG;EAC7BjB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;AACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}