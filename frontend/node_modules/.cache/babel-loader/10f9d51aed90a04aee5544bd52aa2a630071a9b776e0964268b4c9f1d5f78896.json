{"ast":null,"code":"var _jsxFileName = \"/Users/lin/Desktop/React/Projects/Router 1/frontend/src/pages/EventPage.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData, json, defer, Await } from \"react-router\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  console.log(\"render eventpage\");\n  const data = useLoaderData();\n  const {\n    events\n  } = data; //events is promise\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => {\n        return /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 18\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadingEvents() {\n  console.log(\"loading from eventPage\");\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"error iss happening\" }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"errorrrr!\"\n    }, {\n      status: 500\n    });\n  } else {\n    // const resData = await response.json();\n    const data = await response.json();\n    return data;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadingEvents()\n  }); //events is promise\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","json","defer","Await","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","console","log","data","events","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","children","resolve","loadedEvents","_c","loadingEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/lin/Desktop/React/Projects/Router 1/frontend/src/pages/EventPage.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\nimport { useLoaderData, json, defer, Await } from \"react-router\";\nimport { Suspense } from \"react\";\nfunction EventsPage() {\n  console.log(\"render eventpage\");\n  const data = useLoaderData();\n  const { events } = data; //events is promise\n  return (\n    <Suspense fallback={<p style={{ textAlign: \"center\" }}></p>}>\n      <Await resolve={events}>\n        {(loadedEvents) => {\n          return <EventsList events={loadedEvents} />;\n        }}\n      </Await>\n    </Suspense>\n  );\n}\n\nexport default EventsPage;\nasync function loadingEvents() {\n  console.log(\"loading from eventPage\");\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"error iss happening\" }), {\n    //   status: 500,\n    // });\n    throw json({ message: \"errorrrr!\" }, { status: 500 });\n  } else {\n    // const resData = await response.json();\n    const data = await response.json();\n    return data;\n  }\n}\nexport function loader() {\n  return defer({ events: loadingEvents() }); //events is promise\n}\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,cAAc;AAChE,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/B,MAAMC,IAAI,GAAGX,aAAa,CAAC,CAAC;EAC5B,MAAM;IAAEY;EAAO,CAAC,GAAGD,IAAI,CAAC,CAAC;EACzB,oBACEL,OAAA,CAACF,QAAQ;IAACS,QAAQ,eAAEP,OAAA;MAAGQ,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAE;IAAAC,QAAA,eAC1Dd,OAAA,CAACH,KAAK;MAACkB,OAAO,EAAET,MAAO;MAAAQ,QAAA,EACnBE,YAAY,IAAK;QACjB,oBAAOhB,OAAA,CAACP,UAAU;UAACa,MAAM,EAAEU;QAAa;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf;AAACX,EAAA,CAbQD,UAAU;EAAA,QAEJP,aAAa;AAAA;AAAAuB,EAAA,GAFnBhB,UAAU;AAenB,eAAeA,UAAU;AACzB,eAAeiB,aAAaA,CAAA,EAAG;EAC7Bf,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrC,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA,MAAM1B,IAAI,CAAC;MAAE2B,OAAO,EAAE;IAAY,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACvD,CAAC,MAAM;IACL;IACA,MAAMlB,IAAI,GAAG,MAAMc,QAAQ,CAACxB,IAAI,CAAC,CAAC;IAClC,OAAOU,IAAI;EACb;AACF;AACA,OAAO,SAASmB,MAAMA,CAAA,EAAG;EACvB,OAAO5B,KAAK,CAAC;IAAEU,MAAM,EAAEY,aAAa,CAAC;EAAE,CAAC,CAAC,CAAC,CAAC;AAC7C;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}