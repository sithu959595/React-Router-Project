{"ast":null,"code":"var _jsxFileName = \"/Users/lin/Desktop/React/Projects/Router 1/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport EventPage, { loader as eventsLoader } from \"./pages/EventPage\";\nimport EditEventPage, { action as editEventAction } from \"./pages/EditEventPage\";\nimport EventDetailPage, { loader as eventDetailLoader } from \"./pages/EventDetailPage\";\nimport NewEventPage, { action as newEventAction } from \"./pages/NewEventPage\";\nimport Root from \"./pages/Root\";\nimport RootForEvents from \"./pages/RootForEvents\";\nimport { element } from \"prop-types\";\nimport Error from \"./pages/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(RootForEvents, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }, this),\n        loader: eventsLoader\n      }, {\n        path: \":eventId\",\n        loader: eventDetailLoader,\n        id: \"event-detail\",\n        children: [{\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 28\n          }, this)\n        }, {\n          path: \"edit\",\n          element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 28\n          }, this)\n        }]\n      }, {\n        path: \"new\",\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 24\n        }, this),\n        action: newEventAction\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventPage","loader","eventsLoader","EditEventPage","action","editEventAction","EventDetailPage","eventDetailLoader","NewEventPage","newEventAction","Root","RootForEvents","element","Error","jsxDEV","_jsxDEV","App","router","path","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","_c","$RefreshReg$"],"sources":["/Users/lin/Desktop/React/Projects/Router 1/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport EventPage, { loader as eventsLoader } from \"./pages/EventPage\";\nimport EditEventPage, {\n  action as editEventAction,\n} from \"./pages/EditEventPage\";\nimport EventDetailPage, {\n  loader as eventDetailLoader,\n} from \"./pages/EventDetailPage\";\nimport NewEventPage, { action as newEventAction } from \"./pages/NewEventPage\";\nimport Root from \"./pages/Root\";\nimport RootForEvents from \"./pages/RootForEvents\";\nimport { element } from \"prop-types\";\nimport Error from \"./pages/Error\";\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <Root />,\n      errorElement: <Error />,\n      children: [\n        {\n          index: true,\n          element: <HomePage />,\n        },\n        {\n          path: \"events\",\n          element: <RootForEvents />,\n          children: [\n            {\n              index: true,\n              element: <EventPage />,\n              loader: eventsLoader,\n            },\n            {\n              path: \":eventId\",\n              loader: eventDetailLoader,\n              id: \"event-detail\",\n              children: [\n                {\n                  index: true,\n                  element: <EventDetailPage />,\n                },\n                {\n                  path: \"edit\",\n                  element: <EditEventPage />,\n                },\n              ],\n            },\n\n            {\n              path: \"new\",\n              element: <NewEventPage />,\n              action: newEventAction,\n            },\n          ],\n        },\n      ],\n    },\n  ]);\n  return <RouterProvider router={router}></RouterProvider>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,IAAIC,MAAM,IAAIC,YAAY,QAAQ,mBAAmB;AACrE,OAAOC,aAAa,IAClBC,MAAM,IAAIC,eAAe,QACpB,uBAAuB;AAC9B,OAAOC,eAAe,IACpBL,MAAM,IAAIM,iBAAiB,QACtB,yBAAyB;AAChC,OAAOC,YAAY,IAAIJ,MAAM,IAAIK,cAAc,QAAQ,sBAAsB;AAC7E,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,aAAa,MAAM,uBAAuB;AACjD,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGpB,mBAAmB,CAAC,CACjC;IACEqB,IAAI,EAAE,GAAG;IACTN,OAAO,eAAEG,OAAA,CAACL,IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACjBC,YAAY,eAAER,OAAA,CAACF,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACvBE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXb,OAAO,eAAEG,OAAA,CAAChB,QAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACtB,CAAC,EACD;MACEJ,IAAI,EAAE,QAAQ;MACdN,OAAO,eAAEG,OAAA,CAACJ,aAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAC1BE,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,IAAI;QACXb,OAAO,eAAEG,OAAA,CAACf,SAAS;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QACtBrB,MAAM,EAAEC;MACV,CAAC,EACD;QACEgB,IAAI,EAAE,UAAU;QAChBjB,MAAM,EAAEM,iBAAiB;QACzBmB,EAAE,EAAE,cAAc;QAClBF,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,IAAI;UACXb,OAAO,eAAEG,OAAA,CAACT,eAAe;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAC7B,CAAC,EACD;UACEJ,IAAI,EAAE,MAAM;UACZN,OAAO,eAAEG,OAAA,CAACZ,aAAa;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAC3B,CAAC;MAEL,CAAC,EAED;QACEJ,IAAI,EAAE,KAAK;QACXN,OAAO,eAAEG,OAAA,CAACP,YAAY;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QACzBlB,MAAM,EAAEK;MACV,CAAC;IAEL,CAAC;EAEL,CAAC,CACF,CAAC;EACF,oBAAOM,OAAA,CAACjB,cAAc;IAACmB,MAAM,EAAEA;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAiB,CAAC;AAC1D;AAACK,EAAA,GA/CQX,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}