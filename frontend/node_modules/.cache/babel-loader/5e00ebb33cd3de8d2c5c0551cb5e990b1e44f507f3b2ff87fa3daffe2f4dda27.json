{"ast":null,"code":"var _jsxFileName = \"/Users/lin/Desktop/React/Projects/Router 1/frontend/src/pages/EventPage.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData, json, defer, Await } from \"react-router\";\nimport { Suspense } from \"react\";\nimport TestForm from \"./TestForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const {\n    events\n  } = data; //events is promise\n  console.log(\"render eventpage \", events);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TestForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading...!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadingEvents() {\n  console.log(\"loading from eventPage\");\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"error iss happening\" }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"errorrrr!\"\n    }, {\n      status: 500\n    });\n  } else {\n    // const resData = await response.json();\n    const data = await response.json();\n    console.log(\"impportant\", response);\n    return data.events;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadingEvents()\n  }); //events is promise\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","json","defer","Await","Suspense","TestForm","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","fallback","style","textAlign","resolve","loadedEvents","_c","loadingEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/lin/Desktop/React/Projects/Router 1/frontend/src/pages/EventPage.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\nimport { useLoaderData, json, defer, Await } from \"react-router\";\nimport { Suspense } from \"react\";\nimport TestForm from \"./TestForm\";\nfunction EventsPage() {\n  const data = useLoaderData();\n\n  const { events } = data; //events is promise\n  console.log(\"render eventpage \", events);\n  return (\n    <>\n      <TestForm />\n      <Suspense fallback={<p style={{ textAlign: \"center\" }}>Loading...!</p>}>\n        <Await resolve={events}>\n          {(loadedEvents) => <EventsList events={loadedEvents} />}\n        </Await>\n      </Suspense>\n    </>\n  );\n}\n\nexport default EventsPage;\nasync function loadingEvents() {\n  console.log(\"loading from eventPage\");\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"error iss happening\" }), {\n    //   status: 500,\n    // });\n    throw json({ message: \"errorrrr!\" }, { status: 500 });\n  } else {\n    // const resData = await response.json();\n    const data = await response.json();\n    console.log(\"impportant\", response);\n    return data.events;\n  }\n}\nexport function loader() {\n  return defer({ events: loadingEvents() }); //events is promise\n}\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,cAAc;AAChE,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAClC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGZ,aAAa,CAAC,CAAC;EAE5B,MAAM;IAAEa;EAAO,CAAC,GAAGD,IAAI,CAAC,CAAC;EACzBE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,MAAM,CAAC;EACxC,oBACEN,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA,CAACF,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZb,OAAA,CAACH,QAAQ;MAACiB,QAAQ,eAAEd,OAAA;QAAGe,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAP,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;MAAAJ,QAAA,eACrET,OAAA,CAACJ,KAAK;QAACqB,OAAO,EAAEX,MAAO;QAAAG,QAAA,EACnBS,YAAY,iBAAKlB,OAAA,CAACR,UAAU;UAACc,MAAM,EAAEY;QAAa;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACX,CAAC;AAEP;AAACT,EAAA,CAfQD,UAAU;EAAA,QACJV,aAAa;AAAA;AAAA0B,EAAA,GADnBhB,UAAU;AAiBnB,eAAeA,UAAU;AACzB,eAAeiB,aAAaA,CAAA,EAAG;EAC7Bb,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrC,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA,MAAM7B,IAAI,CAAC;MAAE8B,OAAO,EAAE;IAAY,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACvD,CAAC,MAAM;IACL;IACA,MAAMpB,IAAI,GAAG,MAAMgB,QAAQ,CAAC3B,IAAI,CAAC,CAAC;IAClCa,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEa,QAAQ,CAAC;IACnC,OAAOhB,IAAI,CAACC,MAAM;EACpB;AACF;AACA,OAAO,SAASoB,MAAMA,CAAA,EAAG;EACvB,OAAO/B,KAAK,CAAC;IAAEW,MAAM,EAAEc,aAAa,CAAC;EAAE,CAAC,CAAC,CAAC,CAAC;AAC7C;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}