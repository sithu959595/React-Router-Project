{"ast":null,"code":"var _jsxFileName = \"/Users/lin/Desktop/React/Projects/Router 1/frontend/src/pages/EventDetailPage.js\";\nimport { useParams, json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const params = useParams();\n  const data = useLoaderData();\n  console.log(\"From detail \", data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Event Detail Page for \", params.eventId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\nexport async function loader({\n  request,\n  params\n}) {\n  console.log(\"hi\");\n  const id = params.eventId;\n  console.log(\"id is \", id);\n  const resp = await fetch(`http://localhost:8080/events/${id}`);\n  if (!resp.ok) {\n    throw json({\n      message: \"Could not fetch the details for the selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    console.log(\"ok\");\n    return resp;\n  }\n}","map":{"version":3,"names":["useParams","json","useLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","params","data","console","log","children","eventId","fileName","_jsxFileName","lineNumber","columnNumber","loader","request","id","resp","fetch","ok","message","status"],"sources":["/Users/lin/Desktop/React/Projects/Router 1/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { useParams, json, useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nexport default function () {\n  const params = useParams();\n  const data = useLoaderData();\n  console.log(\"From detail \", data);\n  return (\n    <>\n      <h1>Event Detail Page for {params.eventId}</h1>\n      {/* <EventItem event={data.event} /> */}\n    </>\n  );\n}\nexport async function loader({ request, params }) {\n  console.log(\"hi\");\n  const id = params.eventId;\n  console.log(\"id is \", id);\n  const resp = await fetch(`http://localhost:8080/events/${id}`);\n  if (!resp.ok) {\n    throw json(\n      {\n        message: \"Could not fetch the details for the selected event\",\n      },\n      { status: 500 }\n    );\n  } else {\n    console.log(\"ok\");\n    return resp;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACjE,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAChD,eAAe,YAAY;EACzB,MAAMC,MAAM,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAMS,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5BQ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAAC;EACjC,oBACEJ,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA;MAAAO,QAAA,GAAI,wBAAsB,EAACJ,MAAM,CAACK,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBAE/C,CAAC;AAEP;AACA,OAAO,eAAeC,MAAMA,CAAC;EAAEC,OAAO;EAAEX;AAAO,CAAC,EAAE;EAChDE,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACjB,MAAMS,EAAE,GAAGZ,MAAM,CAACK,OAAO;EACzBH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAES,EAAE,CAAC;EACzB,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,gCAA+BF,EAAG,EAAC,CAAC;EAC9D,IAAI,CAACC,IAAI,CAACE,EAAE,EAAE;IACZ,MAAMtB,IAAI,CACR;MACEuB,OAAO,EAAE;IACX,CAAC,EACD;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACLf,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,OAAOU,IAAI;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}